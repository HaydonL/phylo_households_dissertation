draw_no = 1894, ages = ages, K = K, min_age = min_age,
max_age = max_age, plot = FALSE)
# Calculate final mixture densities for each group
mixtures <- lapply(1:4, plot_normal, fit = fit_norm, chain_no = 2,
draw_no = 1894, ages = ages, K = 5, min_age = min_age,
max_age = max_age, plot = FALSE)
source(here::here("helper-functions", "plot_final_mixtures.R"))
source(here::here("helper-functions", "plot_final_mixtures.R"))
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(mixtures, 4, ages, captions)
p[[1]]
p[[2]]
rm(list = ls())
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
library(posterior)
library(bayesplot)
filename <- here::here("data", "simulated", "sim_1.csv")
modelpath <- here::here("stan-models", "logit_gaussian_mixture_SG_ordered.stan")
color_scheme_set("brightblue")
data <- read.csv(filename)
stan_data <- list(
N = dim(data)[1],
N_group = 4,
ages = data[c("x", "y")],
group_nos = data$group,
min_age = 0,
max_age = 1,
K = 5
)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
fit <- model$sample(
data = stan_data,
seed = 64519,
chains = 4,
parallel_chains = 4,
refresh = 500,
iter_warmup = 1000,
iter_sampling = 2000
)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
library(posterior)
library(bayesplot)
color_scheme_set("brightblue")
filename <- here::here("data", "simulated", "sim_1.csv")
modelpath <- here::here("stan-models", "logit_gaussian_mixture_SG_ordered.stan")
data <- read.csv(filename)
stan_data <- list(
N = dim(data)[1],
N_group = 4,
ages = data[c("x", "y")],
group_nos = data$group,
min_age = 0,
max_age = 1,
K = 5
)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
model <- cmdstan_model(modelpath)
fit <- model$sample(
data = stan_data,
seed = 64519,
chains = 4,
parallel_chains = 4,
refresh = 500,
iter_warmup = 1000,
iter_sampling = 2000
)
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
library(posterior)
library(bayesplot)
library(data.table)
color_scheme_set("brightblue")
filename <- here::here("data", "pairs_tsi_clean.csv")
modelpath <- here::here("stan-models", "logit_gaussian_mixture_SG_ordered.stan")
pairs_tsi <- read.csv(filename)
setDT(pairs_tsi)
pairs_tsi[, group := 1 + as.integer(2 * (SEX.SOURCE == "M") + same_hh)]
stan_data <- list(
N = pairs_tsi[, .N],
K = 5,
N_group = 4,
ages = as.matrix(pairs_tsi[, .(AGE_TRANSMISSION.SOURCE,
AGE_INFECTION.RECIPIENT)]),
group_nos = pairs_tsi[, .(group)][[1]],
min_age = 15,
max_age = 50
)
model <- cmdstan_model(modelpath)
fit <- model$sample(
data = stan_data,
seed = 5381524,
chains = 4,
parallel_chains = 4,
refresh = 500,
iter_warmup = 3000,
iter_sampling = 5000
)
pairs_tsi <- read.csv(here::here("data", "pairs_tsi_clean.csv"))
# Exploratory data analysis
# Load in packages and data
library(ggplot2)
library(data.table)
library(plyr)
str(pairs_tsi)
summary(pairs_tsi)
print(sort(unique(pairs_tsi$ROUND.M)))
print(sort(unique(pairs_tsi$ROUND.M)))
summary(pairs_tsi)
pairs_tsi
pairs_tsi <- read.csv(here::here("data", "pairs_tsi_clean.csv"))
setDT(pairs_tsi)
pairs_tsi[, group := 1 + as.integer(2 * (SEX.SOURCE == "M") + same_hh)]
str(pairs_tsi)
summary(pairs_tsi)
pairs_tsi[,.N , by = group]
p <- ggplot(pairs_tsi[group == 1]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE))
p
# Plot histograms by group
plots <- list()
captions <- c("Female to male, out-of-household",
"Female to male, same household",
"Male to female, out-of-household",
"Male to female, same household")
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == 1]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
labs(caption = captions[group_no])
plots[[group_no]] <- p
}
p
plots[[1]]
plots[[2]]
plots[[3]]
plots[[4]]
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
labs(caption = captions[group_no])
plots[[group_no]] <- p
}
plots[[1]]
plots[[2]]
plots[[3]]
plots[[4]]
?annotate
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate(paste("N = ", pairs_tsi[group == group_no, .N]), x = 10, y = 10) +
labs(caption = captions[group_no])
plots[[group_no]] <- p
}
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 10, y = 10,
label = paste("N = ", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no])
plots[[group_no]] <- p
}
p
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 35, y = 15,
label = paste("N = ", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no])
plots[[group_no]] <- p
}
plots[[1]]
plots[[2]]
plots[[3]]
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 35, y = 15,
label = paste("N = ", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
lims(x = c(15, 50))
plots[[group_no]] <- p
}
p
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 35, y = 15,
label = paste("N = ", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 35, y = 15,
label = paste("N = ", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
}
p
plots[[1]]
plots[[2]]
plots[[3]]
plots[[4]]
plots[[5]]
plots[[1]]
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
}
p
?labs
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
xlab("Age of source") +
ylab("Frequency") +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
}
p
# Exploratory data analysis
# Load in packages and data
library(ggplot2)
library(data.table)
library(gridExtra)
pairs_tsi <- read.csv(here::here("data", "pairs_tsi_clean.csv"))
setDT(pairs_tsi)
pairs_tsi[, group := 1 + as.integer(2 * (SEX.SOURCE == "M") + same_hh)]
str(pairs_tsi)
summary(pairs_tsi)
print(sort(unique(pairs_tsi$ROUND.M)))
pairs_tsi[,.N , by = group]
pairs_tsi[,.N , by = group]
# Plot histograms by group
plots <- list()
captions <- c("Female to male, out-of-household",
"Female to male, same household",
"Male to female, out-of-household",
"Male to female, same household")
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
xlab("Age of source") +
ylab("Frequency") +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
}
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
#xlab("Age of source") +
#ylab("Frequency") +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
source(here::here("helper-functions", "grid_theme.R"))
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
grid_theme()
#xlab("Age of source") +
#ylab("Frequency") +
lims(x = c(15, 50), y = c(0, 20))
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
# Plot histograms
plots <- list()
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 25]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
# Plot histograms
plots <- list()
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 25]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 25, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
final_plot
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE)) +
annotate("text", x = 45, y = 18,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
?binwidth
??binwidth
# Plot histograms by group: Age of sources
plots <- list()
captions <- c("Female to male, out-of-household",
"Female to male, same household",
"Male to female, out-of-household",
"Male to female, same household")
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE), binwidth = 1) +
annotate("text", x = 45, y = 18,
label = paste("N =", pairs_tsi[group == group_no, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
ggsave("hist_age_source.pdf", final_plot)
# Plot histograms
plots <- list()
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE), binwidth = 1) +
annotate("text", x = 45, y = 18,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 20))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
ggsave("hist_age_source_young.pdf", final_plot)
# Plot histograms
plots <- list()
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE), binwidth = 1) +
annotate("text", x = 45, y = 18,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 15))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
ggsave("hist_age_source_young.pdf", final_plot)
# Plot histograms
plots <- list()
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE), binwidth = 1) +
annotate("text", x = 45, y = 18,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 13))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
# Plot histograms
plots <- list()
for (group_no in 1:4){
p <- ggplot(pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5]) +
geom_histogram(aes(x = AGE_TRANSMISSION.SOURCE), binwidth = 1) +
annotate("text", x = 45, y = 13,
label = paste("N =",
pairs_tsi[group == group_no & AGE_INFECTION.RECIPIENT < 24.5, .N])) +
labs(caption = captions[group_no]) +
theme(axis.title = element_blank(),
plot.caption = element_text(size = 10)) +
lims(x = c(15, 50), y = c(0, 15))
#xlab("Age of source") +
#ylab("Frequency") +
plots[[group_no]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1)
ggsave("hist_age_source_young.pdf", final_plot)
fit_norm <- readRDS(here::here("data", "logit_sim_1_draws_ordered_SG.rds"))
fit_norm
fit_norm$time()
?get_sampler_params
??get_sampler_params
fit_norm$diagnostic_summary()
fit$time()
fit_norm
fit_norm$print(max_rows = 1000)
fit <- readRDS(here::here("data", "logit_sim_1_draws_ordered.rds"))
fit$print(max_rows = 1000)
# Load CmdStanR fits
fit_norm <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
fit_norm$print(max_rows = 1000)
fit <- readRDS(here::here("data", "logit_sim_1_draws_ordered.rds"))
fit$time()
fit$diagnostic_summary()
fit <- readRDS(here::here("data", "beta_sim_1_draws.rds"))
fit$time()
fit$diagnostic_summary()
fit <- readRDS(here::here("data", "beta_sim_1_draws_SG.rds"))
fit$time()
fit$diagnostic_summary()
