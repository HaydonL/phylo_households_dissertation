plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3))
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
plot_density <- function(params, K = 5, filename){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3))
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
for (chain in 1:4){
draw <- draws[1, chain,]
filename <- paste0("d1c", chain, ".pdf")
plot_density(draw, filename = filename)
}
for (chain in 1:4){
draw <- draws[1, chain,]
filename <- paste0("d1c", chain, ".pdf")
plot_density(draw, filename = filename)
cat("Chain ", chain, "done")
}
library(rstan)
options(mc.cores = parallel::detectCores())
library(posterior)
library(bayesplot)
library(label.switching)
library(dplyr)
filename <- here::here("data", "simulated", "rline_1.csv")
modelpath <- here::here("stan-models", "beta_count_2D.stan")
data <- read.csv(filename)
K <- 5 # number of clusters
stan_data <- list(
N = dim(data)[1],
K = K,
ages = data,
min_age = 0,
max_age = 1
)
stan_data <- list(
N = dim(data)[1],
K = K,
ages = data,
min_age = 0,
max_age = 1
)
fit <- readRDS(here::here("data", "rline_1_draws.rds"))
print(fit, c("weights", "mus", "kappas", "psis", "pred_class", "lp__"))
pdf("5_cluster_traceplot.pdf")
traceplot(fit, c("weights", "mus"))
dev.off()
traceplot(fit, "lp__")
paste("a", NA)
paste0("a", NA)
plot_density <- function(params, K = 5, filename, draw_no = NA){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3)) +
scale_fill_gradient(low = "white", high = "red")
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste("Final mixture", draw_no)) +
scale_fill_gradient(low = "white", high = "red")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
fit <- readRDS(here::here("data", "rline_1_draws.rds"))
draws <- rstan::extract(fit, c("weights", "mus", "kappas", "psis"),
permuted = FALSE)
for (draw_no in draw_indices){
draw <- draws[draw_no, 3,]
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no)
cat("Draw", draw_no, "done")
}
draw_indices <- seq(2000, 2500, by = 50)
for (draw_no in draw_indices){
draw <- draws[draw_no, 3,]
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no)
cat("Draw", draw_no, "done")
}
rm(list = ls())
library(ggplot2)
library(ggpubr)
library(dplyr)
library(purrr)
library(tidyr)
source(here::here("helper-functions", "dbeta_bivariate.R"))
grid_theme <- function(){
theme(axis.text = element_blank(),
axis.title = element_blank())
}
fit <- readRDS(here::here("data", "rline_1_draws.rds"))
draws <- rstan::extract(fit, c("weights", "mus", "kappas", "psis"),
permuted = FALSE)
plot_density <- function(params, K = 5, filename, draw_no = NA){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3)) +
scale_fill_gradient(low = "white", high = "red")
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste("Final mixture", draw_no)) +
scale_fill_gradient(low = "white", high = "red")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
draw_indices <- seq(2000, 2500, by = 50)
for (draw_no in draw_indices){
draw <- draws[draw_no, 3,]
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no)
cat("Draw", draw_no, "done")
}
draw <- draws[2000, 3,]plot_density
draw <- draws[2000, 3,]
plot_density(draw, test, 2500)
plot_density(draw, "test.pdf", 2500)
plot_density <- function(params, filename, K = 5, draw_no = NA){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3)) +
scale_fill_gradient(low = "white", high = "red")
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste("Final mixture", draw_no)) +
scale_fill_gradient(low = "white", high = "red")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
plot_density(draw, "test.pdf", draw_no = 2500)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(purrr)
library(tidyr)
source(here::here("helper-functions", "dbeta_bivariate.R"))
grid_theme <- function(){
theme(axis.text = element_blank(),
axis.title = element_blank())
}
fit <- readRDS(here::here("data", "rline_1_draws.rds"))
draws <- rstan::extract(fit, c("weights", "mus", "kappas", "psis"),
permuted = FALSE)
plot_density <- function(params, filename, K = 5, draw_no = NA){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3)) +
scale_fill_gradient(low = "white", high = "red")
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste("Final mixture", draw_no)) +
scale_fill_gradient(low = "white", high = "red")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
for (chain in 1:4){
draw <- draws[1, chain,]
filename <- paste0("d1c", chain, ".pdf")
plot_density(draw, filename = filename, draw_no = 1)
cat("Chain", chain, "done")
}
draw_indices <- seq(2000, 2500, by = 50)
for (draw_no in draw_indices){
draw <- draws[draw_no, 3,]
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no)
cat("Draw", draw_no, "done")
}
draw <- draws[2000, 3,]
plot_density(draw, filename = filename, draw_no = 2000)
print("Draw", draw_no, "done")
cat("Draw", draw_no, "done")
draw_indices <- seq(2000, 2500, by = 50)
draw_indices
for (draw_no in draw_indices){
draw <- draws[draw_no, 3,]
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no)
cat("Draw", draw_no, "done")
}
draw_no <- 2000
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no)
rm(list = ls())
library(ggplot2)
library(ggpubr)
library(dplyr)
library(purrr)
library(tidyr)
source(here::here("helper-functions", "dbeta_bivariate.R"))
grid_theme <- function(){
theme(axis.text = element_blank(),
axis.title = element_blank())
}
fit <- readRDS(here::here("data", "rline_1_draws.rds"))
draws <- rstan::extract(fit, c("weights", "mus", "kappas", "psis"),
permuted = FALSE)
plot_density <- function(params, filename, K = 5, draw_no = NA){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3)) +
scale_fill_gradient(low = "white", high = "red")
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste("Final mixture", draw_no)) +
scale_fill_gradient(low = "white", high = "red")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
draw_no <- 2050
filename <- paste0("d", draw_no, "c3.pdf")
draw_indices <- seq(2000, 2500, by = 50)
draw_indices
filename
draw
draw <- draws[2050, 3,]
draw
draw_indices <- seq(2000, 2500, by = 50)
for (draw_no in draw_indices){
draw <- draws[draw_no, 3,]
filename <- paste0("d", draw_no, "c3.pdf")
plot_density(draw, filename = filename, draw_no = draw_no)
cat("Draw", draw_no, "done")
}
fit <- readRDS(here::here("data", "rline_1_draws.rds"))
print(fit, "alpha")
traceplot(fit, "alpha")
library(rstan)
options(mc.cores = parallel::detectCores())
library(posterior)
library(bayesplot)
library(label.switching)
library(dplyr)
traceplot(fit, "alpha")
library(rstan)
options(mc.cores = parallel::detectCores())
library(posterior)
library(bayesplot)
library(label.switching)
library(dplyr)
filename <- here::here("data", "simulated", "rline_1.csv")
modelpath <- here::here("stan-models", "beta_count_2D.stan")
data <- read.csv(filename)
K <- 5 # number of clusters
stan_data <- list(
N = dim(data)[1],
K = K,
ages = data,
min_age = 0,
max_age = 1
)
modelpath <- here::here("stan-models", "beta_mixture_DP_one_group_flex_alpha.stan")
fit <- stan(file = modelpath, data = stan_data, iter = 5500,
warmup = 2500, seed = 846125, chains = 4)
traceplot(fit, "alpha")
traceplot(fit, c("weights", "mus"))
fit <- stan(file = modelpath, data = stan_data, iter = 23000,
warmup = 3000, seed = 846125, chains = 4)
fit <- readRDS(here::here("data", "rline_1_draws_flex.rds"))
#fit <- readRDS(here::here("data", "rline_1_draws.rds"))
print(fit, c("weights", "mus", "kappas", "psis", "pred_class", "lp__"))
traceplot(fit, c("weights", "mus"))
traceplot(fit, "alpha")
library(ggplot2)
library(ggpubr)
library(dplyr)
library(purrr)
library(tidyr)
source(here::here("helper-functions", "dbeta_bivariate.R"))
grid_theme <- function(){
theme(axis.text = element_blank(),
axis.title = element_blank())
}
fit <- readRDS(here::here("data", "rline_1_draws_flex.rds"))
draws <- rstan::extract(fit, c("weights", "mus", "kappas", "psis"),
permuted = FALSE)
plot_density <- function(params, filename, K = 5, draw_no = NA){
x <- seq(0, 1, by = 0.005)
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", 1:K, "]")
weights <- params[weight_names]
for (k in 1:K){
grid <- expand.grid(x, x)
mu_names <-  c(paste0("mus[", k, ",1]"), paste0("mus[", k, ",2]"))
kappa_names <- c(paste0("kappas[", k, ",1]"), paste0("kappas[", k, ",2]"))
mus <- params[mu_names]
kappas <- params[kappa_names]
psi <- params[paste0("psis[", k, "]")]
grid$density <- apply(grid, 1, dbeta_bivariate, mus = mus, kappas = kappas,
psi = psi)
density_list[[k]] <- grid$density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("Cluster ", k, " weight = ",
signif(weights[k]), 3)) +
scale_fill_gradient(low = "white", high = "red")
plots[[k]] <- p
}
# Final plot
full_density <- rep(0, length(grid))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
grid$density <- full_density
p <- ggplot(grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste("Final mixture", draw_no)) +
scale_fill_gradient(low = "white", high = "red")
plots[[K + 1]] <- p
final_plot <- ggarrange(plotlist = plots, nrow = 3, ncol = 2)
ggsave(filename, final_plot, width = 7, height = 7)
print(final_plot)
}
for (chain in 1:4){
draw <- draws[1, chain,]
filename <- paste0("d1c", chain, "flex.pdf")
plot_density(draw, filename = filename, draw_no = 1)
cat("Chain", chain, "done")
}
dim(draws)
draws
names(draws)
traceplot(fit, c("mus", "weights"))
traceplot(fit, c("mus", "weights", "psis"))
summary(fit, "alpha")
?stan
library(ggplot2)
library(ggpubr)
library(dplyr)
library(purrr)
library(tidyr)
source(here::here("helper-functions", "dbeta_bivariate.R"))
grid_theme <- function(){
theme(axis.text = element_blank(),
axis.title = element_blank())
}
fit <- readRDS(here::here("data", "rline_1_draws_flex.rds"))
