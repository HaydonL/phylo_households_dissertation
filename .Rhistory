intensities[[1]]
yng_grid
unique(yng_grid)
# Create grid of ages and list of draw numbers
ages <- seq(15.5, 49.5, by = 1)
draws_per_chain <- draws <- seq(100, 5000, by = 50)
draws <- seq(100, 20000, by = 50)
grid <- expand.grid(ages, ages)
# Create cluster for parallel programming
n <- detectCores() - 1
cl <- makeCluster(n)
clusterExport(cl, list("plot_normal", "extract_data"))
clusterEvalQ(cl, library(posterior))
clusterEvalQ(cl, library(mvtnorm))
eta_draws <- as_draws_matrix(fit$draws("eta"))
# Calculate densities for 200 iterations
intensity_list <- list()
for (chain_no in 1:4){
intensities_tmp <- parLapply(cl, draws_per_chain, plot_normal, fit = fit,
chain_no = chain_no, group_no = group,
ages = ages, plot = FALSE)
intensity_list[[chain_no]] <- intensities_tmp
}
intensities <- unlist(intensity_list, recursive = FALSE)
#densities <- intensities # Save density
etas <- as.numeric(eta_draws[draws, group])
# Calculate intensities
for (index in 1:length(etas)){
intensities[[index]] <- etas[index] * intensities[[index]]
}
draws
draws_per_chain
draws_per_chain <- draws <- seq(50, 5000, by = 50)
draws <- seq(50, 20000, by = 50)
# Create cluster for parallel programming
n <- detectCores() - 1
cl <- makeCluster(n)
clusterExport(cl, list("plot_normal", "extract_data"))
clusterEvalQ(cl, library(posterior))
clusterEvalQ(cl, library(mvtnorm))
eta_draws <- as_draws_matrix(fit$draws("eta"))
# Calculate densities for 200 iterations
intensity_list <- list()
for (chain_no in 1:4){
intensities_tmp <- parLapply(cl, draws_per_chain, plot_normal, fit = fit,
chain_no = chain_no, group_no = group,
ages = ages, plot = FALSE)
intensity_list[[chain_no]] <- intensities_tmp
}
intensities <- unlist(intensity_list, recursive = FALSE)
#densities <- intensities # Save density
etas <- as.numeric(eta_draws[draws, group])
# Calculate intensities
for (index in 1:length(etas)){
intensities[[index]] <- etas[index] * intensities[[index]]
}
# Extract infections for young people
recip_15_24_indices <- which(grid$Var2 < 24) # X: Source, Y: Recipient
# Calculate intensities among young people by age of source
for (index in 1:length(intensities)){
yng_grid <- grid[recip_15_24_indices, ]
setDT(yng_grid)
yng_grid[, intensity := intensities[[index]][recip_15_24_indices]]
yng_grid[, grouped_int := sum(intensity), by = Var1]
# Remove Var2 (Recipient) and intensity
yng_grid[, Var2 := NULL]
yng_grid[, intensity := NULL]
yng_grid <- unique(yng_grid)
intensities[[index]] <- yng_grid[,grouped_int]
}
warnings()
intensities[[1]]
intensities[[2]]
unlist(intensities)[1:35]
length(ages)
intensities <- matrix(unlist(intensities), nrow = length(ages))
intensities[1,]
intensities[,1]
rm(list = ls())
# This file processes the output of the stan fits and then prints and saves
# desired plots used in the thesis as pdfs.
library(data.table)
library(ggplot2)
library(gridExtra)
library(Hmisc, include.only = "binconf")
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "plot_final_mixtures.R"))
source(here::here("helper-functions", "grid_theme.R"))
source(here::here("helper-functions", "sample_intensity.R"))
# Load CmdStanR fits
fit_norm <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
intensity_FM_OOH <- sample_intensity(fit_norm, 1)
intensity_FM_HH <- sample_intensity(fit_norm, 2)
intensity_FM_OOH
dim(intensity_FM_OOH)
?quantile
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_OOH_CIs
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_HH_CIs
prop_FM_HH <- intensity_FM_HH / (intensity_FM_HH + intensity_FM_OOH)
prop_FM_HH
prop_FM_HH_CIs <- apply(prop_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
prop_FM_HH_CIs
as.data.frame(FM_OOH_CIs)
# Create plots
FM_OOH_CIs <- as.data.frame(FM_OOH_CIs)
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
FM_OOH_CIs
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs$ages <- ages
FM_OOH_CIs
?ggplot
?geom_line
#geom_line(aes(y = MF_HH_sum, color = "Within household")) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = 50%), data = FM_OOH_CIs,
#geom_line(aes(y = MF_HH_sum, color = "Within household")) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = "50%"), data = FM_OOH_CIs,
color = "Out-of-household")) #+
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs
FM_OOH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household")) +
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
#geom_line(aes(y = MF_HH_sum, color = "Within household")) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs)#,
p
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs),
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs),
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs,
fill = "Out-of-household")
p
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
prop_FM_HH <- intensity_FM_HH / (intensity_FM_HH + intensity_FM_OOH)
prop_FM_HH_CIs <- apply(prop_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
FM_OOH_CIs <- as.data.frame(t(FM_HH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs,
fill = "Out-of-household") +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
color = "Within-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs,
fill = "Within-household") +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
str(FM_HH_CIs)
class(FM_HH_CIs)
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
FM_HH_CIs <- as.data.frame(t(FM_HH_CIs))
names(FM_HHH_CIs) <- c("median", "LQ", "UQ")
FM_HHH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs,
fill = "Out-of-household") +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
color = "Within-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs,
fill = "Within-household") +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs,
fill = "Out-of-household") #+
#geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
#          color = "Within-household") +
#geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs,
#            fill = "Within-household") +
#labs(x = "Age of source (Female)", y = "Relative intensity",
#     title = "MF transmission HH vs non-HH intensity",
#     caption = "Among young (16-24) recipients",
#     color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs) #+
#geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
#          color = "Within-household") +
#geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs,
#            fill = "Within-household") +
#labs(x = "Age of source (Female)", y = "Relative intensity",
#     title = "MF transmission HH vs non-HH intensity",
#     caption = "Among young (16-24) recipients",
#     color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) #+
#geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
#          color = "Within-household") +
#geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs,
#            fill = "Within-household") +
#labs(x = "Age of source (Female)", y = "Relative intensity",
#     title = "MF transmission HH vs non-HH intensity",
#     caption = "Among young (16-24) recipients",
#     color = NULL)
p
geom_line(aes(x = ages, y = median), data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4)
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4)
p
FM_HH_CIs
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
FM_HH_CIs <- as.data.frame(t(FM_HH_CIs))
names(FM_HHH_CIs) <- c("median", "LQ", "UQ")
FM_HH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4)
p
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
FM_HH_CIs <- as.data.frame(t(FM_HH_CIs))
names(FM_HH_CIs) <- c("median", "LQ", "UQ")
FM_HH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4)
p
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
color = "Within household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4)
#labs(x = "Age of source (Female)", y = "Relative intensity",
#     title = "MF transmission HH vs non-HH intensity",
#     caption = "Among young (16-24) recipients",
#     color = NULL)
p
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median), data = FM_OOH_CIs,
color = "Out-of-household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median), data = FM_HH_CIs,
color = "Within household") +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ), data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p
intensity_FM_OOH <- sample_intensity(fit_norm, 1)
intensity_FM_HH <- sample_intensity(fit_norm, 2)
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
prop_FM_HH <- intensity_FM_HH / (intensity_FM_HH + intensity_FM_OOH)
prop_FM_HH_CIs <- apply(prop_FM_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
FM_HH_CIs <- as.data.frame(t(FM_HH_CIs))
names(FM_HH_CIs) <- c("median", "LQ", "UQ")
FM_HH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "FM transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
print(p)
ggsave("FM_HH_age_intensity.pdf", p)
intensity_MF_OOH <- sample_intensity(fit_norm, 3)
intensity_MF_HH <- sample_intensity(fit_norm, 4)
MF_OOH_CIs <- apply(intensity_MF_OOH, 1, quantile, probs = c(0.5, 0.025, 0.975))
MF_HH_CIs <- apply(intensity_MF_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
prop_MF_HH <- intensity_MF_HH / (intensity_MF_HH + intensity_MF_OOH)
prop_MF_HH_CIs <- apply(prop_MF_HH, 1, quantile, probs = c(0.5, 0.025, 0.975))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
MF_OOH_CIs <- as.data.frame(t(MF_OOH_CIs))
names(MF_OOH_CIs) <- c("median", "LQ", "UQ")
MF_OOH_CIs$ages <- ages
MF_HH_CIs <- as.data.frame(t(MF_HH_CIs))
names(MF_HH_CIs) <- c("median", "LQ", "UQ")
MF_HH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = MF_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = MF_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = MF_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = MF_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Male)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
print(p)
ggsave("MF_HH_age_intensity.pdf", p)
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = MF_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = MF_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = MF_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = MF_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Male)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs, size = 2) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs, size = 2) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "FM transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
print(p)
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs, size = 1.5) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs, size = 1.5) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "FM transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
print(p)
ggsave("FM_HH_age_intensity.pdf", p)
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs, size = 1) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs, size = 1) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "FM transmission HH vs non-HH intensity",
caption = "Among young (16-24) recipients",
color = NULL)
print(p)
ggsave("FM_HH_age_intensity.pdf", p)
ggsave("FM_HH_age_intensity.pdf", p)
source(here::here("helper-functions", "pretty_scale.R"))
pretty_scale
pretty_scale()
pretty_scale(15, 50, 1)
scale_fill_graduentn()()
scale_fill_graduentn()
scale_fill_gradientn()
scale_fill_gradientn(colors = c("blue", "white"))
# This file processes the output of the stan fits and then prints and saves
# desired plots used in the thesis as pdfs.
library(data.table)
library(ggplot2)
library(gridExtra)
library(Hmisc, include.only = "binconf")
# This file processes the output of the stan fits and then prints and saves
# desired plots used in the thesis as pdfs.
library(data.table)
library(ggplot2)
library(gridExtra)
library(Hmisc, include.only = "binconf")
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "plot_final_mixtures.R"))
source(here::here("helper-functions", "grid_theme.R"))
source(here::here("helper-functions", "sample_intensity.R"))
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
captions <- c("Female to male, out-of-household",
"Female to male, same household",
"Male to female, out-of-household",
"Male to female, same household")
# Load CmdStanR fits
fit_norm <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(fit_norm, 2, 1894, 4, ages, captions)
print(p)
source(here::here("helper-functions", "plot_final_mixtures.R"))
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(fit_norm, 2, 1894, 4, ages, captions)
source(here::here("helper-functions", "plot_final_mixtures.R"))
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(fit_norm, 2, 1894, 4, ages, captions)
print(p)
source(here::here("helper-functions", "plot_final_mixtures.R"))
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(fit_norm, 2, 1894, 4, ages, captions)
p
p[[2]]
source(here::here("helper-functions", "plot_final_mixtures.R"))
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
captions <- c("Female to male, out-of-household",
"Female to male, same household",
"Male to female, out-of-household",
"Male to female, same household")
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(fit_norm, 2, 1894, 4, ages, captions)
p
print(p[[2])
print(p[[2]])
# Calculate final mixture densities for each group
mixtures <- lapply(1:4, plot_normal, fit = fit_norm, chain_no = 2,
draw_no = 1894, ages = ages, K = K, min_age = min_age,
max_age = max_age, plot = FALSE)
# Calculate final mixture densities for each group
mixtures <- lapply(1:4, plot_normal, fit = fit_norm, chain_no = 2,
draw_no = 1894, ages = ages, K = 5, min_age = min_age,
max_age = max_age, plot = FALSE)
source(here::here("helper-functions", "plot_final_mixtures.R"))
source(here::here("helper-functions", "plot_final_mixtures.R"))
# FIX PLOTTING CODE, NOT SHARING LEGEND
p <- plot_final_mixtures(mixtures, 4, ages, captions)
p[[1]]
p[[2]]
