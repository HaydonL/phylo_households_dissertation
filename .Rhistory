labels = function(x) sprintf("%.2f", x)) +
labs(caption = "Final mixture") +
xlim(0, 1) + ylim(0, 1)
}
plots[[group]] <- p
}
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1, widths = c(8))
ggsave("logit_sim_1_mixture_C1D2000G1.pdf", final_plot, height = 9.55)
# Read in data
pairs_tsi <- read.csv(here::here("data", "pairs_tsi_clean.csv"))
rm(list = ls())
# This file processes the output of the stan fits and then prints and saves
# desired plots used in the thesis as pdfs.
library(data.table)
library(ggplot2)
library(gridExtra)
library(Hmisc, include.only = "binconf")
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "plot_mixtures.R"))
source(here::here("helper-functions", "grid_theme.R"))
source(here::here("helper-functions", "sample_intensity.R"))
# Load CmdStanR fits
fit_norm <- readRDS(here::here("data", "logit_pairs_draws_ordered_SG.rds"))
captions <- c("Female to male, out-of-household",
"Female to male, same household",
"Male to female, out-of-household",
"Male to female, same household")
intensity_FM_OOH <- sample_intensity(fit_norm, 1)
intensity_FM_HH <- sample_intensity(fit_norm, 2)
FM_OOH_CIs <- apply(intensity_FM_OOH, 1, quantile, probs = c(0.5, 0.05, 0.95))
FM_HH_CIs <- apply(intensity_FM_HH, 1, quantile, probs = c(0.5, 0.05, 0.95))
prop_FM_HH <- intensity_FM_HH / (intensity_FM_HH + intensity_FM_OOH)
prop_FM_HH_CIs <- apply(prop_FM_HH, 1, quantile, probs = c(0.5, 0.05, 0.95))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
FM_OOH_CIs <- as.data.frame(t(FM_OOH_CIs))
names(FM_OOH_CIs) <- c("median", "LQ", "UQ")
FM_OOH_CIs$ages <- ages
FM_HH_CIs <- as.data.frame(t(FM_HH_CIs))
names(FM_HH_CIs) <- c("median", "LQ", "UQ")
FM_HH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = FM_OOH_CIs, size = 1) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = FM_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = FM_HH_CIs, size = 1) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = FM_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Female)", y = "Relative intensity",
title = "FM transmission HH vs non-HH intensity",
caption = "Among young (15-24) recipients",
color = NULL)
print(p)
ggsave("FM_HH_age_intensity.pdf", p)
intensity_MF_OOH <- sample_intensity(fit_norm, 3)
intensity_MF_HH <- sample_intensity(fit_norm, 4)
MF_OOH_CIs <- apply(intensity_MF_OOH, 1, quantile, probs = c(0.5, 0.05, 0.95))
MF_HH_CIs <- apply(intensity_MF_HH, 1, quantile, probs = c(0.5, 0.05, 0.95))
prop_MF_HH <- intensity_MF_HH / (intensity_MF_HH + intensity_MF_OOH)
prop_MF_HH_CIs <- apply(prop_MF_HH, 1, quantile, probs = c(0.5, 0.05, 0.95))
# Create plots
ages <- seq(15.5, 49.5, by = 1)
MF_OOH_CIs <- as.data.frame(t(MF_OOH_CIs))
names(MF_OOH_CIs) <- c("median", "LQ", "UQ")
MF_OOH_CIs$ages <- ages
MF_HH_CIs <- as.data.frame(t(MF_HH_CIs))
names(MF_HH_CIs) <- c("median", "LQ", "UQ")
MF_HH_CIs$ages <- ages
p <- ggplot() + geom_line(aes(x = ages, y = median, color = "Out-of-household"),
data = MF_OOH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Out-of-household"),
data = MF_OOH_CIs, alpha = 0.4) +
geom_line(aes(x = ages, y = median, color = "Within household"),
data = MF_HH_CIs) +
geom_ribbon(aes(x = ages, ymin = LQ, ymax = UQ, fill = "Within-household"),
data = MF_HH_CIs, alpha = 0.4) +
labs(x = "Age of source (Male)", y = "Relative intensity",
title = "MF transmission HH vs non-HH intensity",
caption = "Among young (15-24) recipients",
color = NULL)
print(p)
ggsave("MF_HH_age_intensity.pdf", p)
rm(list = ls())
# This file processes the output of the stan fits and then prints and saves
# desired plots used in the thesis as pdfs.
library(data.table)
library(ggplot2)
library(gridExtra)
library(Hmisc, include.only = "binconf")
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "plot_mixtures.R"))
source(here::here("helper-functions", "grid_theme.R"))
source(here::here("helper-functions", "sample_intensity.R"))
fit <- readRDS(here::here("data", "logit_sim_1_draws_ordered_SG.rds"))
chain_no <- 1
draw_no <- 2000
group_no <- 1
ages <- seq(0.001, 0.999, length.out = 300)
# Calculate final mixture densities for each group
output <- plot_mixtures(fit, chain_no, draw_no, group_no, ages, min_age = 0,
max_age = 1, plot = FALSE)
plots <- list()
for (group in 1:6){
x_grid <- expand.grid(ages, ages)
x_grid$density <- output$densities[[group]]
# Plot heatmap of density
if (group < 6){
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() +
theme(panel.background = element_blank(),
axis.line = element_line()) +
scale_fill_continuous(type = "viridis") +
labs(caption = paste0("Component ", group,", weight = ",
output$weight[group])) +
xlim(0, 1) + ylim(0, 1)
}
else {
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() +
theme(panel.background = element_blank(),
axis.line = element_line()) +
scale_fill_continuous(type = "viridis", trans = "log",
labels = function(x) sprintf("%.2f", x)) +
labs(caption = "Final mixture") +
xlim(0, 1) + ylim(0, 1)
}
plots[[group]] <- p
}
plots$ncol <- 3
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob, ncol = 1, widths = c(8))
ggsave("logit_sim_1_mixture_C1D2000G1_flip.pdf", final_plot)
final_plot <- grid.arrange(grob, ncol = 1, widths = c(10))
ggsave("logit_sim_1_mixture_C1D2000G1_flip.pdf", final_plot)
ggsave("logit_sim_1_mixture_C1D2000G1_flip.pdf", final_plot)
ggsave("logit_sim_1_mixture_C1D2000G1_flip.pdf", final_plot, width = 10)
ggsave("logit_sim_1_mixture_C1D2000G1_flip.pdf", final_plot, width = 10, height = 5.5)
rm(list = ls())
library(ggplot2)
library(gridExtra)
source(here::here("helper-functions/p_valid.R"))
source(here::here("helper-functions/plot_normal.R"))
g2_const <- p_valid(0.1)
g3_const <- p_valid(0.03)
integrand <- function(x){
pnorm((1- x - 0.3)/0.05) - pnorm((-x - 0.3)/0.05)
}
g4_const <- integrate(integrand, 0, 0.7)$value
x <- seq(0.002, 0.998, length.out = 300)
x_grid <- expand.grid(x, x)
n_points <- dim(x_grid)[1]
densities <- list()
# Calculate densities
densities[[1]] <- rep(1, n_points)
densities[[2]] <- apply(x_grid, 1, function(input){
x <- input[1]
y <- input[2]
dnorm(y, mean = x, sd = 0.1)/g2_const
})
densities[[3]] <- apply(x_grid, 1, function(input){
x <- input[1]
y <- input[2]
dnorm(y, mean = x, sd = 0.03)/g3_const
})
densities[[4]] <- apply(x_grid, 1, function(input){
x <- input[1]
y <- input[2]
dnorm(y, mean = x + 0.3, sd = 0.05)/g4_const
})
fit <- readRDS(here::here("data", "logit_sim_1_draws_ordered_SG.rds"))
mixtures <- lapply(1:4, plot_normal, fit = fit, chain_no = 2,
draw_no = 4328, ages = x, K = 5, min_age = 0,
max_age = 1, plot = FALSE)
for(i in mixtures){
print(max(i))
}
for(i in densities){
print(max(i))
}
max_points <- c(6.5, 20, 138, 75)
max_densities <- c(1.5, 5, 15, 12)
vals <- list()
vals[[1]] <- c(0, 0.5, 1, 1.5, 6.5)
vals[[2]] <- c(0, 2, 4, 6, 20)
vals[[3]] <- c(0, 5, 10, 15, 138)
vals[[4]] <- c(0, 4, 8, 12, 75)
pretties <- list()
for (i in 1:4){
pretties[[i]] <- scale_fill_gradientn(colours = c(
"white",
"#ffffd9",
"#7fcdbb",
"#225ea8",
"#253494",
"#081d58"
),
values = rescale(vals[[i]]),
na.value = "grey90")
}
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "right",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(5, 6.4)
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob)
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(5, 6.4)
plots$as.table <- FALSE
grob <- do.call(arrangeGrob, plots)
final_plot <- grid.arrange(grob)
?grid.arrange
grob
str(grob)
print(grob)
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(5, 6.4)
plots$as.table <- FALSE
grob <- do.call(grid.arrange, plots)
print(grob)
ggsave("sim_comparison_flip.pdf", grob)
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(5.5, 9.7)
plots$as.table <- FALSE
grob <- do.call(grid.arrange, plots)
ggsave("sim_comparison_flip.pdf", grob)
ggsave("sim_comparison_flip.pdf", grob, width = 10, height = 5)
ggsave("sim_comparison_flip.pdf", grob, width = 10, height = 6)
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(7, 9.7)
plots$as.table <- FALSE
grob <- do.call(grid.arrange, plots)
ggsave("sim_comparison_flip.pdf", grob, width = 10, height = 7)
ggsave("sim_comparison_flip.pdf", grob, width = 10, height = 6.5)
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(7.5, 9.2)
plots$as.table <- FALSE
grob <- do.call(grid.arrange, plots)
ggsave("sim_comparison_flip.pdf", grob, width = 10, height = 6.2)
plots <- list()
for (plot_no in 1:4){
pretty <- pretties[[plot_no]]
max_point <- max_points[[plot_no]]
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(densities[[plot_no]], max_point, 0)
# Plot heatmap of density
p1 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Actual density: Group", plot_no)) +
pretty +
theme(legend.position = "none",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no - 1]] <- p1
x_grid <- expand.grid(x, x)
x_grid <- rbind(x_grid, c(100, 100), c(-100, -100))
x_grid$density <- c(mixtures[[plot_no]], max_point, 0)
p2 <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
labs(caption = paste("Sampled density: Group", plot_no)) +
pretty +
theme(legend.position = "bottom",
panel.background = element_blank(),
axis.text = element_blank(),
axis.line = element_line(),
axis.title = element_blank()) +
xlim(0, 1) + ylim(0, 1)
plots[[2 * plot_no]] <- p2
}
plots$ncol <- 4
plots$nrow <- 2
plots$heights <- c(7.3, 9.4)
plots$as.table <- FALSE
grob <- do.call(grid.arrange, plots)
ggsave("sim_comparison_flip.pdf", grob, width = 10, height = 6.2)
# Load CmdStanR fits
fit_norm <- readRDS(here::here("data", "logit_pairs_draws_ordered_SG.rds"))
fit_norm$diagnostic_summary()
fit_norm$print(max_rows = 1000)
fit_norm$time()
