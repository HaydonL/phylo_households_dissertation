grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point)) +
theme(legend.position = "right")
print(ggp1_legend)
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, 1)) +
theme(legend.position = "right")
print(ggp1_legend)
max_point <- max(unlist(density_list[[6]]))
x_grid$density <- full_density
max_point <- max(unlist(density_list[[6]]))
x_grid$density <- full_density
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, 1)) +
theme(legend.position = "right")
print(ggp1_legend)
max_point <- max(unlist(density_list[[6]]))
max_point
max_point*100
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*10)) +
theme(legend.position = "right")
print(ggp1_legend)
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*100)) +
theme(legend.position = "right")
print(ggp1_legend)
shared_legend <- extract_legend(ggp1_legend)
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*5)) +
theme(legend.position = "right")
print(ggp1_legend)
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*4)) +
theme(legend.position = "right")
print(ggp1_legend)
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
print(ggp1_legend)
rm(list=ls())
library(gridExtra)
library(posterior)
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "extract_data.R"))
source(here::here("helper-functions", "extract_legend.R"))
source(here::here("helper-functions", "grid_theme.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
K <- 5
min_age <- 15
max_age <- 50
plot <- TRUE
params <- extract_data(fit, chain_no, draw_no)
# Set up grid of plot points
x <- ages
scaled_x <- (x - min_age) / (max_age - min_age) # linearly scaled ages
logit_x <- log(scaled_x / (1 - scaled_x)) # logit scaled ages
density_list <- list()
plots <- list()
weight_names <- paste0("weights[", group_no, ",", 1:K, "]")
weights <- as.numeric(params[weight_names])
for (k in 1:K){
x_grid <- expand.grid(x, x)
sx_grid <- expand.grid(scaled_x, scaled_x)
logit_grid <- expand.grid(logit_x, logit_x)
mu1_names <- paste0("mus_1[", group_no, ",", k, "]")
mu2_names <- paste0("mus_2[", group_no, ",", k, "]")
Sigma_ends <- c("1,1]", "1,2]", "2,1]", "2,2]")
Sigma_names <- c()
for (i in 1:4){
end <- Sigma_ends[i]
Sigma_names[i] <- paste0("Sigmas[", group_no, ",", k, ",", end)
}
mu_1 <- as.numeric(params[mu1_names])
mu_2 <- as.numeric(params[mu2_names])
mus <- c(mu_1, mu_2)
Sigmas <- as.numeric(params[Sigma_names])
Sigma <- matrix(Sigmas, nrow = 2, byrow = TRUE)
x_grid$density <- apply(logit_grid, 1, dmvnorm, mean = mus, sigma = Sigma)
x_grid$density <- x_grid$density / (sx_grid$Var1 * (1 - sx_grid$Var1) *
sx_grid$Var2 * (1 - sx_grid$Var2))
x_grid$density <- x_grid$density / (max_age - min_age)^2
density_list[[k]] <- x_grid$density
}
# Final plot
full_density <- rep(0, length(x_grid$density))
for (k in 1:K){
full_density <- full_density + weights[k] * density_list[[k]]
}
density_list[[K + 1]] <- full_density
max_point <- max(unlist(density_list[[6]]))
x_grid$density <- full_density
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("weight = ", signif(weights[k]), 3)) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
max_point <- max(unlist(density_list[[K + 1]]))
x_grid$density <- full_density
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("weight = ", signif(weights[k]), 3)) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
x_grid$density <- full_density
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[K + 1]] <- p
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "bottom")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3, heights = c(10, 1))
print(p)
grid_theme()
grid_theme
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3, heights = c(10, 1))
print(p)
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("weight = ", signif(weights[k], 3))) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
x_grid$density <- full_density
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[K + 1]] <- p
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3, heights = c(10, 1))
print(p)
?grid.arrange
?gtable
p <- grid.arrange(grob, shared_legend, ncol = 3)
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("weight = ", round(weights[k], 3))) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
max_point <- max(unlist(density_list[[K + 1]]))
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = paste0("weight = ", round(weights[k], 3))) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
x_grid$density <- full_density
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[K + 1]] <- p
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3)
print(p)
p
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = paste0("weight = ", round(weights[k], 3))) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
x_grid$density <- full_density
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[K + 1]] <- p
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(title = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3)
print(p)
#' Produce ggplot2 theme for making density plots
#'
#' @return - a ggplot2 theme
#' @export
#'
#' @examples
grid_theme <- function(){
theme(axis.text = element_blank(),
axis.title = element_blank())
}
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = paste0("weight = ", round(weights[k], 3))) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
x_grid$density <- full_density
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[K + 1]] <- p
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3)
print(p)
#' Produce ggplot2 theme for making density plots
#'
#' @return - a ggplot2 theme
#' @export
#'
#' @examples
grid_theme <- function(){
theme(axis.title = element_blank())
}
for (k in 1:K){
x_grid$density <- density_list[[k]]
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = paste0("weight = ", round(weights[k], 3))) +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[k]] <- p
}
x_grid$density <- full_density
p <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "none")
plots[[K + 1]] <- p
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "right")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3)
print(p)
ggsave("mixture.pdf", p)
ggp1_legend <- ggplot(x_grid) + geom_tile(aes(x = Var1, y = Var2, fill = density)) +
grid_theme() + labs(caption = "Final mixture") +
scale_fill_continuous(trans = "sqrt", type = "viridis",
limits = c(0, max_point*2)) +
theme(legend.position = "left")
shared_legend <- extract_legend(ggp1_legend)
plots$ncol <- 2
grob <- do.call(arrangeGrob, plots)
p <- grid.arrange(grob, shared_legend, ncol = 3)
print(p)
?arrangeGrob
rm(list = ls())
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "extract_data.R"))
source(here::here("helper-functions", "extract_legend.R"))
source(here::here("helper-functions", "grid_theme.R"))
source(here::here("helper-functions", "plot_normal.R"))
source(here::here("helper-functions", "extract_data.R"))
source(here::here("helper-functions", "extract_legend.R"))
source(here::here("helper-functions", "grid_theme.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
K <- 5
min_age <- 15
max_age <- 50
plot <- TRUE
plot_normal(fit, chain_no, draw_no, group_no, ages)
library(posterior)
plot_normal(fit, chain_no, draw_no, group_no, ages)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
rm(list = ls())
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
K <- 5
min_age <- 15
max_age <- 50
plot <- TRUE
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
K <- 5
min_age <- 15
max_age <- 50
plot <- TRUE
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
K <- 5
min_age <- 15
max_age <- 50
plot <- TRUE
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
cat("Cluster", k, "done\n")
cat("Cluster", 1, "done\n")
print(p)
ggsave("mixture.pdf", p)
ggsave("mixture.pdf", p)
?ggsave
last_plot()
p
print(p)
?ggsave
ggsave("mixture.pdf", p, width = 7, height = 10)
ggsave("mixture.pdf", p, width = 7, height = 10)
ggsave("mixture.pdf", p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
?arrangeGrob
?grid.arrange
?do.call
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
source(here::here("helper-functions", "plot_normal.R"))
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
source(here::here("helper-functions", "plot_normal.R"))
fit <- readRDS(here::here("data", "logit_pairs_draws_ordered.rds"))
chain_no <- 1
draw_no <- 1
group_no <- 1
ages <- seq(15 + 1e-5, 50 - 1e-5, length.out = 300)
p <- plot_normal(fit, chain_no, draw_no, group_no, ages)
print(p)
ggsave("mixture.pdf", p)
