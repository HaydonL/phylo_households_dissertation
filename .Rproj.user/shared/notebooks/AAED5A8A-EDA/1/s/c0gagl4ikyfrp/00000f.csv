"0","###############  2-D KERNEL DENISTY ESTIMATION: ############################"
"0","set.seed(1001)"
"0",""
"0","#DIFFERENT HH, M to F "
"0","d <- matrix(c(pairs_tsi[as.logical(same_hh)==0 & SEX.SOURCE=='M', ]$AGE_INFECTION.RECIPIENT, pairs_tsi[as.logical(same_hh)==0 & SEX.SOURCE=='M',]$AGE_TRANSMISSION.SOURCE),ncol=2) %>% "
"0","  magrittr::set_colnames(c(""x"", ""y"")) %>% "
"0","  as_tibble()"
"0",""
"0","kd<-ks::kde(d, compute.cont=TRUE, h=0.2)"
"0","get_contour <- function(kd_out=kd, prob=""5%"") {"
"0","  contour_95 <- with(kd_out, contourLines(x=eval.points[[1]], y=eval.points[[2]],"
"0","                                          z=estimate, levels=cont[prob])[[1]])"
"0","  as_tibble(contour_95) %>% "
"0","    mutate(prob = prob)"
"0","}"
"0",""
"0","dat_out <- map_dfr(c(""10%"", ""20%"", ""50%"" ,""80%"", ""90%""), ~get_contour(kd, .)) %>% "
"0","  group_by(prob) %>% "
"0","  mutate(n_val = 1:n()) %>% "
"0","  ungroup()"
"0",""
"0","## clean kde output"
"0","kd_df <- expand_grid(x=kd$eval.points[[1]], y=kd$eval.points[[2]]) %>% "
"0","  mutate(z = c(kd$estimate %>% t))"
"0",""
"0","p1<-ggplot(data=kd_df, aes(x, y)) +"
"0","  geom_tile(aes(fill=z)) +"
"0","  geom_path(aes(x, y, group = prob), "
"0","            data=dat_out, colour = I(""black"")) +"
"0","  geom_text(aes(label = prob), data = "
"0","              filter(dat_out, (prob%in% c(""10%"") & n_val==100 | prob%in% c(""20%"") & n_val==80) | prob%in% c(""50%"") & n_val==60 | prob%in% c(""80%"") & n_val==40 | prob%in% c(""90%"") & n_val==20),"
"0","            colour = I(""black""), size =I(3))+"
"0","  xlim(15,50)+"
"0","  ylim(15,50)+"
"0","  geom_abline(intercept=0,slope=1,color='black')+"
"0","  scale_fill_gradient(low = ""white"", high = ""red"") +"
"0","  labs(x='Age of recipient at transmission ',"
"0","       y='Age of source at transmission') +"
"0","  theme_bw() +"
"0","  theme(legend.position = ""none"")"
"0",""
"0",""
"0","#SAME HH, M to F"
"0","d <- matrix(c(pairs_tsi[as.logical(same_hh)==1 & SEX.SOURCE=='M', ]$AGE_INFECTION.RECIPIENT, pairs_tsi[as.logical(same_hh)==1 & SEX.SOURCE=='M',]$AGE_TRANSMISSION.SOURCE),ncol=2) %>% "
"0","  magrittr::set_colnames(c(""x"", ""y"")) %>% "
"0","  as_tibble()"
"0",""
"0","kd<-ks::kde(d, compute.cont=TRUE, h=0.2)"
"0","get_contour <- function(kd_out=kd, prob=""5%"") {"
"0","  contour_95 <- with(kd_out, contourLines(x=eval.points[[1]], y=eval.points[[2]],"
"0","                                          z=estimate, levels=cont[prob])[[1]])"
"0","  as_tibble(contour_95) %>% "
"0","    mutate(prob = prob)"
"0","}"
"0",""
"0","dat_out <- map_dfr(c(""10%"", ""20%"",""50%"",""80%"", ""90%""), ~get_contour(kd, .)) %>% "
"0","  group_by(prob) %>% "
"0","  mutate(n_val = 1:n()) %>% "
"0","  ungroup()"
"0",""
"0","## clean kde output"
"0","kd_df <- expand_grid(x=kd$eval.points[[1]], y=kd$eval.points[[2]]) %>% "
"0","  mutate(z = c(kd$estimate %>% t))"
"0",""
"0","p2<-ggplot(data=kd_df, aes(x, y)) +"
"0","  geom_tile(aes(fill=z)) +"
"0","  geom_path(aes(x, y, group = prob), "
"0","            data=dat_out, colour = I(""black"")) +"
"0","  geom_text(aes(label = prob), data = "
"0","              filter(dat_out, (prob%in% c(""10%"") & n_val==100 | prob%in% c(""20%"") & n_val==80) | prob%in% c(""50%"") & n_val==60 | prob%in% c(""80%"") & n_val==40 | prob%in% c(""90%"") & n_val==20),"
"0","            colour = I(""black""), size =I(3))+"
"0","  xlim(15,50)+"
"0","  ylim(15,50)+"
"0","  geom_abline(intercept=0,slope=1,color='black')+"
"0","  scale_fill_gradient(low = ""white"", high = ""blue"") +"
"0","  labs(x='Age of recipient at transmission ',"
"0","       y='Age of source at transmission') +"
"0","  theme_bw() +"
"0","  theme(legend.position = ""none"")"
"0","p3<-ggarrange(p1,p2,ncol=2,nrow=1)"
"2","Warning: [38;5;232mRemoved 8527 rows containing missing values (`geom_tile()`).[39m"
"2","Warning: [38;5;232mRemoved 60 rows containing missing values (`geom_path()`).[39m"
"2","Warning: [38;5;232mRemoved 10153 rows containing missing values (`geom_tile()`).[39m"
"2","Warning: [38;5;232mRemoved 76 rows containing missing values (`geom_path()`).[39m"
"0","annotate_figure(p3,bottom=('Red: Out of household \nBlue: Within household'), top='Contour plots for infections M to F')"
